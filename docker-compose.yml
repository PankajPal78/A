version: '3.8'

services:
  rag-app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///rag_system.db
      - CHROMA_PERSIST_DIRECTORY=/app/chroma_db
      - UPLOAD_FOLDER=/app/uploads
      - LOG_LEVEL=INFO
      # Add your API keys here or use .env file
      # - GEMINI_API_KEY=your_gemini_api_key
      # - OPENAI_API_KEY=your_openai_api_key
    volumes:
      - ./uploads:/app/uploads
      - ./chroma_db:/app/chroma_db
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL database (uncomment if you want to use PostgreSQL instead of SQLite)
  # postgres:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: rag_system
  #     POSTGRES_USER: rag_user
  #     POSTGRES_PASSWORD: rag_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped

  # Optional: Nginx reverse proxy (uncomment for production)
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - rag-app
  #   restart: unless-stopped

volumes:
  # postgres_data:  # Uncomment if using PostgreSQL
  uploads:
  chroma_db:
  logs: